AC_INIT(dvdread/dvd_reader.c)
AM_INIT_AUTOMAKE(libdvdread, 0.9.0)
AM_CONFIG_HEADER(config.h)

AC_CANONICAL_HOST
AC_PROG_CC
AC_STDC_HEADERS

dnl GCC-specific flags
if test x"$GCC" = x"yes"; then

    dnl -O2
    changequote(<<,>>)
    OPT_CFLAGS=`echo "$CFLAGS"|sed "s/-O[s0-9]*//g;"`
    changequote([,])
    OPT_CFLAGS="$OPT_CFLAGS -O2"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])

    dnl arch-specific flags
    case "$host_alias" in
    i?86-* | k?-*)
        case "$host_alias" in
        i386-*) OPT_CFLAGS="$CFLAGS -mcpu=i386";;
        i486-*) OPT_CFLAGS="$CFLAGS -mcpu=i486";;
        i586-*) OPT_CFLAGS="$CFLAGS -mcpu=pentium";;
        i686-*) OPT_CFLAGS="$CFLAGS -mcpu=pentiumpro";;
        k6-*)   OPT_CFLAGS="$CFLAGS -mcpu=k6";;
        esac
        AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    sparc-*)
        OPT_CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis"
        AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    esac
else

    dnl non-gcc flags - we probably need exact configuration triplets here.
    case "$host_alias" in
    sparc-sun-solaris*)
        OPT_CFLAGS="$CFLAGS -xCC -xmemalign"
        AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    esac
fi


dnl Checks for libtool - this must be done after we set cflags (abi issues)
AM_PROG_LIBTOOL


dnl We use dlopen for libdvdcss access
AC_CHECK_FUNC(dlopen, 
  DL_LIBS="", 
  AC_CHECK_LIB(dl, dlopen, 
    DL_LIBS=-ldl, 
    AC_MSG_ERROR(You need libdl (dlopen))
  )
)
AC_SUBST(DL_LIBS)

dnl AC_CHECK_GENERATE_INTTYPES(include)

AC_C_BIGENDIAN
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Linux and Solaris needs this to prototype lseek64 and others
CFLAGS="-D_LARGEFILE64_SOURCE $CFLAGS"

dnl It's nice to have clean code...
AC_ARG_ENABLE([warnings],
    [  --disable-warnings      do not treat warnings as errors])
if test x"$enable_warnings" != xno; then
    if test x"$GCC" = xyes; then
	OPT_CFLAGS="-Wall -Werror $CFLAGS"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
    fi
fi

dnl It's good to be paranoid ;-)
AC_ARG_ENABLE([pedantic],
    [  --enable-pedantic	       enable various extra warnings for gcc])
if test x"$enable_pedantic" = xyes; then
    if test x"$GCC" = xyes; then
	OPT_CFLAGS="-Wall -Wundef -Wshadow -pedantic -Wbad-function-cast -Wmissing-noreturn -Wchar-subscripts -Wcomments -Wconversion -Wformat -Wimplicit-function-dec -Wimplicit-int -Wmain -Wmissing-braces -Wmultichar -Wnested-externs -Wparentheses -Wpointer-arith -Wsign-compare -Wstrict-prototypes -Wwrite-strings $CFLAGS"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
    fi
fi

AC_OUTPUT([
Makefile
src/Makefile
dvdread/Makefile
])
