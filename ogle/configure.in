dnl Process this file with autoconf to produce a configure script.
AC_INIT(ac3/ac3dec_wrap.c)
AM_INIT_AUTOMAKE(ogle, 0.7.4)
dnl AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC

dnl AM_DISABLE_SHARED
AM_PROG_LIBTOOL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN
AC_C_CONST
AC_C_INLINE


dnl Checks for header files.
AC_CHECK_HEADERS(byteswap.h)


dnl Find X Window System
AC_PATH_XTRA
saved_CPPFLAGS=$CPPFLAGS
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
AC_CHECK_HEADER(X11/extensions/XShm.h, 
		AC_DEFINE([HAVE_XSHM], 1, [X11 supports MIT-XShm]))
CPPFLAGS=$saved_CPPFLAGS
AC_CHECK_LIB(Xext, XShmQueryExtension, 
	     XEXT_LIB=-lXext, 
	     AC_MSG_ERROR(You need libXext), 
	     $X_LIBS -lX11 $X_EXTRA_LIBS)

use_xv=yes
AC_ARG_ENABLE(xv, 
  [  --disable-xv            disable the use of Xv ],
  if test x$enableval != xyes; then
    use_xv=no
  fi)
if test x$use_xv = xyes; then
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS $X_CFLAGS"
  AC_CHECK_HEADER(X11/extensions/Xv.h, xv_header=yes, xv_header=no)
  CPPFLAGS=$saved_CPPFLAGS
  AC_CHECK_LIB(Xv, XvQueryExtension, 
	       [ AC_DEFINE([HAVE_XV], 1, [X11 supports Xv])
		 XEXT_LIB="$XEXT_LIB -lXv"
	        ], 
	       AC_MSG_WARN(You won't bw able to use Xv), 
	       $X_LIBS -lX11 -lXext $X_EXTRA_LIBS)
fi
AC_SUBST(XEXT_LIB)

jpeg_path=""
AC_ARG_WITH(libjpeg, 
  [  --with-libjpeg=path     specify the install prefix to libjpeg ], 
  if test x$withval = xno; then
    AC_MSG_ERROR([You must have/use libjpeg])
  fi
  if test x$withval != xyes; then
    jpeg_path=$withval
  fi)
if test -z "$jpeg_path"; then
  dnl We have nothing better to go on, guess that it's installed in prefix
  if test "x$prefix" != xNONE; then
    jpeg_path=$prefix
  else
    jpeg_path=$ac_default_prefix
  fi  
fi
dnl Both this and the libdvdread should first test and see if any flags
dnl beside -lname are needed. Then they the suggested path (+ some standard?)
AC_CHECK_LIB(jpeg, main, 
  [ JPEG_LIBS="-L$jpeg_path/lib -rpath $jpeg_path/lib -ljpeg"
    JPEG_CFLAGS=-I$jpeg_path/include
  ],, -L$jpeg_path/lib)
if test -z "JPEG_LIBS"; then
  AC_MSG_ERROR([Need libjpeg, install it and/or specify it's location])
fi

AC_ARG_WITH(libjpeg-includes, 
  [  --with-libjpeg-includes=path specify location of libjpeg headers ], 
  JPEG_CFLAGS=-I$with_libjpeg_includes)


saved_CPPFLAGS=$CPPFLAGS
CPPFLAGS="$CPPFLAGS $JPEG_CFLAGS"
AC_CHECK_HEADER(jpeglib.h,, 
  [ AC_MSG_WARN([Can not find jpeglib.h, need the libjpeg headers])
    AC_MSG_ERROR([Install the headers and/or specify their location]) 
  ])
CPPFLAGS=$saved_CPPFLAGS

AC_SUBST(JPEG_CFLAGS)
AC_SUBST(JPEG_LIBS)

dnl nanosleep is in librt on Solaris
AC_CHECK_FUNC(nanosleep, , 
  AC_CHECK_LIB(rt, nanosleep, , 
    AC_MSG_ERROR(You need nanosleep)
  )
)

dnl clock_gettime is in librt on Solaris
AC_CHECK_FUNC(clock_gettime, AC_DEFINE([HAVE_CLOCK_GETTIME], 1, [ ]), 
  AC_CHECK_LIB(rt, clock_gettime, AC_DEFINE([HAVE_CLOCK_GETTIME], 1, [ ]), 
    dnl AC_MSG_WARN(You need clock_gettime)
  )
)

dnl Should this also have some fallback library?
AC_CHECK_FUNCS(madvise)



dvd_path=""
AC_ARG_WITH(dvdread, 
  [  --with-dvdread=path     specify the install prefix to libdvdread ], 
  if test x$with_dvdread = xno; then
    AC_MSG_ERROR([You must have/use libdvdread])
  fi
  if test x$with_dvdread != xyes; then
    dvd_path=$with_dvdread
  fi)
if test -z "$dvd_path"; then
  dnl We have nothing better to go on, guess that it's installed in prefix
  if test "x$prefix" != xNONE; then
    dvd_path=$prefix
  else
    dvd_path=$ac_default_prefix
  fi  
fi
AC_CHECK_LIB(dvdread, DVDFileSize, 
  [ DVDREAD_LIBS="-L$dvd_path/lib -rpath $dvd_path/lib -ldvdread" 
    DVDREAD_CFLAGS=-I$dvd_path/include
  ],, -L$dvd_path/lib)
if test -z "$DVDREAD_LIBS"; then
  AC_CHECK_LIB(dvdread, DVDOpen, 
    [ AC_MSG_ERROR([Upgrade libdvdread to 0.9.0 or later]) ],
    [ AC_MSG_ERROR([Need libdvdread, install it or specify it's location])],
    -L$dvd_path/lib)
fi

AC_ARG_WITH(dvdread-includes, 
  [  --with-dvdread-includes=path specify location of libdvdread headers ], 
  DVDREAD_CFLAGS=-I$with_dvdread_includes)

dnl Linux and Solaris needs this to prototype lseek64 and others
DVDREAD_CFLAGS="-D_LARGEFILE64_SOURCE $DVDREAD_CFLAGS"

saved_CPPFLAGS=$CPPFLAGS
CPPFLAGS="$CPPFLAGS $DVDREAD_CFLAGS"
AC_CHECK_HEADER(dvdread/dvd_reader.h,, 
  [ AC_MSG_WARN([Can not find dvd_reader.h, need the libdvdread headers])
    AC_MSG_ERROR([Install the headers and/or specify their location]) 
  ])
CPPFLAGS=$saved_CPPFLAGS

AC_SUBST(DVDREAD_CFLAGS)
AC_SUBST(DVDREAD_LIBS)


dnl Sun MediaLib
have_mlib=no
mlib_path="/opt/SUNWmlib"
AC_ARG_WITH(libmlib,
  [  --with-libmlib=path     specify where mediaLib is installed],
  if test x$with_libmlib != xyes; then
    mlib_path=$with_libmlib
  fi)
if test x$mlib_path != xno; then
  saved_CPPFLAGS=$CFLAGS
  CFLAGS="$CFLAGS -L$mlib_path/lib"
  AC_CHECK_LIB(mlib, mlib_VideoDCT8x8_S16_S16, 
	       [ MLIB_LIBS="-L$mlib_path/lib -rpath $mlib_path/lib -lmlib"
                 MLIB_CFLAGS=-I$mlib_path/include
                 have_mlib=yes
               ],,)
  CFLAGS=$saved_CPPFLAGS
fi
if test x$have_mlib = xyes; then
  saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS $MLIB_CFLAGS"
  AC_CHECK_HEADER(mlib_types.h,, 
    [ AC_MSG_WARN([Can not find mlib_types.h, need the mediaLib headers])
      AC_MSG_ERROR([Install the headers and/or specify their location]) 
    ])
  CPPFLAGS=$saved_CPPFLAGS
fi


AC_SUBST(MLIB_CFLAGS)
AC_SUBST(MLIB_LIBS)
AM_CONDITIONAL(MLIB_LIBS, test x$have_mlib = xyes)
if test x$have_mlib = xyes; then
  AC_DEFINE(HAVE_MLIB, 1, [Solaris MultiMedia Library installed])
fi


a52_path=""
AC_ARG_WITH(liba52, 
  [  --with-liba52=path     specify the install prefix to liba52 (a52dec) ], 
  if test x$with_liba52 = xno; then
    AC_MSG_ERROR([You must have/use a52dec])
  fi
  if test x$with_liba52 != xyes; then
    a52_path=$with_liba52
  fi)
if test -z "$a52_path"; then
  dnl We have nothing better to go on, guess that it's installed in prefix
  if test "x$prefix" != xNONE; then
    a52_path=$prefix
  else
    a52_path=$ac_default_prefix
  fi  
fi
if test x$have_mlib = xyes; then
  AC_CHECK_LIB(a52, a52_init, 
    [ A52_LIBS="-L$a52_path/lib -rpath $a52_path/lib -la52" 
      A52_CFLAGS=-I$a52_path/include
    ],, -L$a52_path/lib -L$mlib_path/lib -lmlib -lm)
else
  AC_CHECK_LIB(a52, a52_init, 
    [ A52_LIBS="-L$a52_path/lib -rpath $a52_path/lib -la52" 
      A52_CFLAGS=-I$a52_path/include
    ],, -L$a52_path/lib -lm)
fi
if test -z "$A52_LIBS"; then
    AC_MSG_ERROR([Need liba52, install a52dec or specify it's location])
fi
AC_CHECK_LIB(ao, ao_drivers, 
    [ A52_LIBS="$A52_LIBS -lao" ],
    [ AC_MSG_ERROR([Need libao, install a52dec or specify it's location]) ],
    -L$a52_path/lib)

AC_ARG_WITH(liba52-includes, 
  [  --with-liba52-includes=path specify location of liba52 headers ], 
  A52_CFLAGS=-I$with_liba52_includes)

saved_CPPFLAGS=$CPPFLAGS
CPPFLAGS="$CPPFLAGS $A52_CFLAGS"
AC_CHECK_HEADER(a52dec/a52.h,, 
    [ AC_MSG_WARN([Can not find a52dec/a52.h, need the liba52 headers])
      AC_MSG_ERROR([Install a52dec(-dev) and/or specify it's location]) 
    ])
CPPFLAGS=$saved_CPPFLAGS

AC_SUBST(A52_CFLAGS)
AC_SUBST(A52_LIBS)




dnl Compiler specific stuff
if test x"$GCC" = x"yes"; then
  CFLAGS="$CFLAGS -Wall"
else
    dnl non-GCC flags - we probably need exact configuration triplets here.
    case "$host_alias" in
    sparc-sun-solaris*)
        CFLAGS="$CFLAGS -xCC -fast"
	DVDREAD_CFLAGS="$DVDREAD_CFLAGS -xmemalign"
    esac
fi

dnl Architecture specific stuff
USE_MMX=
USE_SPARCASM=
case "$host_cpu" in
i?86)
	case "$host_cpu" in
	i386 | i486)
		;;
	i686)
		AC_DEFINE([HAVE_MMX],1,[Processor support MMX])
		USE_MMX=yes
		if test x"$GCC" = x"yes"; then
		  CFLAGS="$CFLAGS -fomit-frame-pointer -funroll-loops"
		fi
		;;
	*)
		AC_DEFINE([HAVE_MMX],1,[Processor support MMX])
		USE_MMX=yes
		;;
	esac
	CFLAGS="$CFLAGS -march=$host_cpu"
	;;
sparc)
	if test x"$GCC" = x"yes"; then
	  CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis"
	  AC_DEFINE([USE_SPARCASM],1,[use assembler routines])
	  USE_SPARCASM=yes
	fi
esac
AC_SUBST(USE_MMX)
AM_CONDITIONAL(USE_MMX, test x$USE_MMX = xyes)
AC_SUBST(USE_SPARCASM)
AM_CONDITIONAL(USE_SPARCASM, test x$USE_SPARCASM = xyes)

TOP_INCLUDES='-I. -I$(top_srcdir) -I$(top_srcdir)/include'
AC_SUBST(TOP_INCLUDES)


AC_OUTPUT(Makefile 
ogle/Makefile 
include/Makefile 
common/Makefile 
ctrl/Makefile 
ui/Makefile 
ac3/Makefile 
mpeg2_video/Makefile 
vmg/Makefile 
mpeg_audio/Makefile 
mpeg2_program/Makefile 
scripts/Makefile
dvd_cli/Makefile)
