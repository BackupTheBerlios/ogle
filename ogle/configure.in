dnl Process this file with autoconf to produce a configure script.
AC_INIT(ac3/ac3dec_wrap.c)
AM_INIT_AUTOMAKE(ogle, 0.7.1)
dnl AM_CONFIG_HEADER(config.h)


AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC

dnl AM_DISABLE_SHARED
AM_PROG_LIBTOOL

dnl Checks for libraries.

dnl Checks for header files.

AC_CHECK_HEADERS(byteswap.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN
AC_C_CONST
AC_C_INLINE

dnl Find X Window System
AC_PATH_XTRA
AC_CHECK_HEADER(X11/extensions/XShm.h, 
		AC_DEFINE([HAVE_XSHM], 1, [X11 supports MIT-XShm]))
AC_CHECK_LIB(Xext, XShmQueryExtension, 
	     XEXT_LIB=-lXext, 
	     AC_MSG_ERROR(You need libXext), 
	     $X_LIBS -lX11 $X_EXTRA_LIBS)

use_xv=yes
AC_ARG_ENABLE(xv, 
  [  --disable-xv            disable the use of Xv ],
  if test x$enableval != xyes; then
    use_xv=no
  fi)
if test x$use_xv = xyes; then
  AC_CHECK_HEADER(X11/extensions/Xv.h, 
		  AC_DEFINE([HAVE_XV], 1, [X11 supports Xv]))
  AC_CHECK_LIB(Xv, XvQueryExtension, 
	       XEXT_LIB="$XEXT_LIB -lXv", 
	       AC_MSG_WARN(You won't bw able to use Xv), 
	       $X_LIBS -lXext $X_EXTRA_LIBS)
fi


dnl Checks for library functions.
AC_CHECK_LIB(jpeg, main, 
	     XEXT_LIB="$XEXT_LIB -ljpeg", 
	     AC_MSG_ERROR(You need libjpeg), 
             $X_LIBS -lX11 $X_EXTRA_LIBS)
AC_SUBST(XEXT_LIB)

dnl nanosleep is in librt on Solaris
AC_CHECK_FUNC(nanosleep, , 
  AC_CHECK_LIB(rt, nanosleep, , 
    AC_MSG_ERROR(You need nanosleep)
  )
)

dnl clock_gettime is in librt on Solaris
AC_CHECK_FUNC(clock_gettime, , 
  AC_CHECK_LIB(rt, clock_gettime, , 
    AC_MSG_ERROR(You need clock_gettime)
  )
)

dnl Should this also have some fallback library
AC_CHECK_FUNCS(madvise)



dvd_path=""
AC_ARG_WITH(dvdread, 
  [  --with-dvdread=path     specify the install prefix to libdvdread ], 
  if test x$withval = xno; then
    AC_MSG_ERROR([You must have/use libdvdread])
  fi
  if test x$withval != xyes; then
    dvd_path=$withval
  fi)
if test -z "$dvd_path"; then
  dnl We have nothing better to go on, guess that it's installed in prefix
  if test "x$prefix" != xNONE; then
    dvd_path=$prefix
  else
    dvd_path=$ac_default_prefix
  fi  
fi
AC_CHECK_LIB(dvdread, DVDOpen, 
  [ DVDREAD_LIBS="-L$dvd_path/lib -rpath $dvd_path/lib -ldvdread" 
    DVDREAD_CFLAGS=-I$dvd_path/include
  ],, -L$dvd_path/lib)
if test -z "$DVDREAD_LIBS"; then
  AC_MSG_ERROR([Need libdvdread, install it and/or specify it's location])
fi

AC_ARG_WITH(dvdread-includes, 
  [  --with-dvdread-includes=path specify location of libdvdread headers ], 
  DVDREAD_CFLAGS=-I$with_dvd_includes)

dnl Linux needs this to prototype lseek64 and others
DVDREAD_CFLAGS="-D_LARGEFILE64_SOURCE $DVDREAD_CFLAGS"
AC_SUBST(DVDREAD_CFLAGS)
AC_SUBST(DVDREAD_LIBS)



dnl Sun MediaLib
have_mlib=no
mlib_path="/opt/SUNWmlib"
AC_ARG_WITH(mlib,
  [  --with-libmlib=path     specify where mediaLib is installed],
  if test x$withval != xyes; then
    mlib_path=$withval
  fi)
if test x$mlib_path != xno; then
  AC_CHECK_LIB(mlib, main, 
	       [ MLIB_LIBS="-L$mlib_path/lib -rpath $mlib_path/lib -lmlib"
                 MLIB_CFLAGS=-I$mlib_path/include
                 have_mlib=yes
               ],, -L$mlib_path/lib)
fi
AC_SUBST(MLIB_CFLAGS)
AC_SUBST(MLIB_LIBS)
AM_CONDITIONAL(MLIB_LIBS, test x$have_mlib = xyes)
if test x$have_mlib = xyes; then
  AC_DEFINE(HAVE_MLIB, 1, [Solaris MultiMedia Library installed])
fi

if test x"$GCC" = x"yes"; then
  CFLAGS="$CFLAGS -Wall"
fi

dnl Architecture specific stuff
USE_MMX=
case "$host_cpu" in
i?86)
	case "$host_cpu" in
	i386 | i486)
		;;
	i686)
		AC_DEFINE([HAVE_MMX],1,[Processor support MMX])
		USE_MMX=yes
		if test x"$GCC" = x"yes"; then
		  CFLAGS="$CFLAGS -fomit-frame-pointer -funroll-loops -malign-double"
		fi
		;;
	*)
		AC_DEFINE([HAVE_MMX],1,[Processor support MMX])
		USE_MMX=yes
		;;
	esac
	CFLAGS="$CFLAGS -march=$host_cpu"
	;;
sparc)
	if test x"$GCC" = x"yes"; then
	  CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis"
	fi
esac
AC_SUBST(USE_MMX)
AM_CONDITIONAL(USE_MMX, test x$USE_MMX = xyes)

dnl Yes this is ugly, but since I'm a developer I can do this... 
INCLUDES='-I. -I$(top_srcdir) -I$(top_srcdir)/include -I/usr/pd/include'
CFLAGS="$INCLUDES $CFLAGS"


AC_OUTPUT(Makefile 
ogle/Makefile 
include/Makefile 
common/Makefile 
ctrl/Makefile 
ui/Makefile 
ac3/Makefile 
mpeg2_video/Makefile 
vmg/Makefile 
mpeg_audio/Makefile 
mpeg2_program/Makefile 
scripts/Makefile
dvd_cli/Makefile)
